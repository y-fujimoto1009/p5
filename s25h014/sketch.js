let step = 0; // アニメーションのステップ数を管理する変数
let particles = []; // 煙のパーティクルを格納する配列

function setup() {
  createCanvas(400, 400); // 400x400ピクセルのキャンバスを作成
  frameRate(60); // フレームレートを60fpsに設定
}

function draw() {
  background(255); // キャンバスを白でクリア

  // V?ng tr?n nh? v? l?n s? c? hi?u ?ng nh?p nh?y sau khi ho?t ?nh ban ??u c?a ch?ng k?t th?c
  let circleStrokeAlpha = 255; // ?? trong su?t m?c ??nh cho vi?n v?ng tr?n
  if (step > 90) { // B?t ??u nh?p nh?y sau khi v?ng tr?n l?n ?? m? r?ng ho?n to?n
    if ((step - 90) % 20 < 10) { // Nh?p nh?y c? sau kho?ng 0.33 gi?y
      circleStrokeAlpha = 255; // Hi?n th?
    } else {
      circleStrokeAlpha = 0; // ?n
    }
  }
  stroke(10, 30, 100, circleStrokeAlpha); // ??t m?u vi?n v? ?? trong su?t cho v?ng tr?n
  strokeWeight(10); // ??t ?? d?y vi?n l? 10 pixel
  fill(255); // ??t m?u t? l? tr?ng

  // Ho?t ?nh v?ng tr?n nh? (t? tr?i sang ph?i)
  // V?ng tr?n b?n tr?i v? b?n ph?i di chuy?n cho ??n khi b??c ??t 60 khung h?nh (1 gi?y)
  let leftX = lerp(0, 150, min(step / 60, 1)); // N?i suy t?a ?? X c?a v?ng tr?n b?n tr?i t? 0 ??n 150
  let rightX = lerp(400, 250, min(step / 60, 1)); // N?i suy t?a ?? X c?a v?ng tr?n b?n ph?i t? 400 ??n 250
  circle(leftX, 200, 50); // V? v?ng tr?n b?n tr?i (???ng k?nh 50)
  circle(rightX, 200, 50); // V? v?ng tr?n b?n ph?i (???ng k?nh 50)

  // Ho?t ?nh v?ng tr?n l?n (m? r?ng)
  // B?t ??u khi b??c v??t qu? 60 khung h?nh v? m? r?ng trong 30 khung h?nh (0.5 gi?y)
  let bigSize = lerp(0, 90, constrain((step - 60) / 30, 0, 1)); // N?i suy ???ng k?nh t? 0 ??n 90
  if (step > 60) {
    circle(200, 200, bigSize); // V? v?ng tr?n l?n ? trung t?m
  }

  // Ho?t ?nh ???ng ch?o (???ng k?o d?i)
  // B?t ??u khi b??c v??t qu? 90 khung h?nh v? ???ng k?o d?i trong 30 khung h?nh (0.5 gi?y)
  if (step > 90) {
    let x1 = 160;
    let y1 = 225;
    // N?i suy t?a ?? ?i?m cu?i c?a ???ng
    let x2 = lerp(160, 240, constrain((step - 90) / 30, 0, 1));
    let y2 = lerp(230, 175, constrain((step - 90) / 30, 0, 1));
    line(x1, y1, x2, y2); // V? ???ng ch?o
  }

  // Ho?t ?nh v?n b?n (m? d?n v? h?i nh? l?n, kh?ng nh?p nh?y)
  // B?t ??u khi b??c v??t qu? 120 khung h?nh v? m? d?n trong 60 khung h?nh (1 gi?y)
  if (step > 120) {
    let t = constrain((step - 120) / 60, 0, 1); // Ti?n ?? ho?t ?nh (t? 0 ??n 1)
    let moveY = lerp(20, 0, t); // N?i suy t?a ?? Y c?a v?n b?n t? 20 pixel b?n d??i ??n v? tr? ban ??u
    let alpha = t * 255; // N?i suy ?? trong su?t t? 0 ??n 255

    // ??m b?o v?n b?n ho?n to?n hi?n th? sau khi m? d?n
    if (t === 1) {
      alpha = 255; // ??t ?? trong su?t l? 255 (ho?n to?n hi?n th?)
    }

    fill(10, 30, 100, alpha); // ??t m?u v?n b?n v? ?? trong su?t
    noStroke(); // Kh?ng c? vi?n cho v?n b?n
    textSize(22); // ??t k?ch th??c v?n b?n l? 22
    textAlign(CENTER); // C?n gi?a v?n b?n
    text("大阪産業大学", width / 2, 300 + moveY); // V? v?n b?n
  }

  // T?o h?t kh?i
  // T?o h?t m?i c? sau 5 khung h?nh sau khi ho?t ?nh v?n b?n ho?n t?t
  if (step > 180 && step % 5 === 0) { // Sau 180 khung h?nh, t?o c? sau 5 khung h?nh
    let x = width / 2 + random(-10, 10); // T?a ?? X ng?u nhi?n g?n trung t?m v?n b?n
    let y = 300 + random(-5, 5); // T?a ?? Y ng?u nhi?n g?n trung t?m v?n b?n
    particles.push(new Particle(x, y));
  }

  // C?p nh?t v? v? h?t
  for (let i = particles.length - 1; i >= 0; i--) {
    particles[i].update();
    particles[i].display();
    if (particles[i].isFinished()) {
      particles.splice(i, 1); // X?a c?c h?t ?? h?t tu?i th?
    }
  }

  step++; // T?ng b??c
}

// L?p h?t kh?i
class Particle {
  constructor(x, y) {
    this.pos = createVector(x, y); // V? tr?
    this.vel = createVector(random(-0.5, 0.5), random(0.5, 1)); // V?n t?c (h??ng xu?ng)
    this.acc = createVector(0, 0.01); // Gia t?c (h?i h??ng xu?ng)
    this.lifespan = 255; // Tu?i th? (???c s? d?ng l?m ?? trong su?t)
    this.radius = random(5, 15); // B?n k?nh ban ??u
  }

  update() {
    this.vel.add(this.acc); // Th?m gia t?c v?o v?n t?c
    this.pos.add(this.vel); // C?p nh?t v? tr?
    this.lifespan -= 2; // Gi?m tu?i th? (gi?m ?? trong su?t)
    this.radius += 0.1; // T?ng b?n k?nh d?n d?n
  }

  display() {
    noStroke(); // Kh?ng c? vi?n
    // ??t m?u kh?i (m?u x?m nh?t) v? ?? trong su?t
    fill(200, 200, 200, this.lifespan);
    ellipse(this.pos.x, this.pos.y, this.radius * 2); // V? h?nh elip
  }

  isFinished() {
    return this.lifespan < 0; // Ki?m tra xem tu?i th? ?? h?t ch?a
  }
}
